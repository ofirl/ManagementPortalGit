{"remainingRequest":"E:\\ManagementPortal\\management-portal\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"E:\\\\ManagementPortal\\\\management-portal\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"E:\\\\ManagementPortal\\\\management-portal\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"E:\\\\ManagementPortal\\\\management-portal\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!E:\\ManagementPortal\\management-portal\\src\\components\\Icon.js","dependencies":[{"path":"E:\\ManagementPortal\\management-portal\\src\\components\\Icon.js","mtime":1550330679977},{"path":"E:\\ManagementPortal\\management-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ManagementPortal\\management-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Icon.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Icon =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Icon, _Component);\n\n  function Icon() {\n    _classCallCheck(this, Icon);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Icon).apply(this, arguments));\n  }\n\n  _createClass(Icon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          href = _this$props.href,\n          bsPrefix = _this$props.bsPrefix,\n          className = _this$props.className,\n          type = _this$props.type,\n          onClick = _this$props.onClick,\n          other = _objectWithoutProperties(_this$props, [\"href\", \"bsPrefix\", \"className\", \"type\", \"onClick\"]);\n\n      if (href != null) return React.createElement(\"a\", {\n        href: href,\n        className: className,\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"span\", Object.assign({\n        className: \"icon\"\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"\".concat(bsPrefix, \" \").concat(bsPrefix, \"-\").concat(type),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })));\n      var pointerClass = onClick != null ? 'pointer' : '';\n      if (inline) return React.createElement(\"i\", Object.assign({\n        className: \"\".concat(bsPrefix, \" \").concat(bsPrefix, \"-\").concat(type, \" \").concat(className, \" \").concat(pointerClass)\n      }, other, {\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n      return React.createElement(\"span\", Object.assign({\n        className: \"icon \".concat(className, \" \").concat(pointerClass)\n      }, other, {\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"\".concat(bsPrefix, \" \").concat(bsPrefix, \"-\").concat(type),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Icon;\n}(Component);\n\nIcon.propTypes = {\n  /** class prefix - this is an escape hatch */\n  bsPrefix: PropTypes.string.isRequired,\n\n  /** href for the icon (will always render a span) */\n  href: PropTypes.string,\n\n  /** passed directly to the underlying element (<a> in case of href, <span> if not inline and <i> if inline) */\n  className: PropTypes.string,\n\n  /** icon type */\n  type: PropTypes.string.isRequired,\n\n  /** a callback fired when the icon is clicked */\n  onClick: PropTypes.func,\n\n  /** inline icon will not render a span */\n  inline: PropTypes.bool\n};\nIcon.defaultProps = {\n  bsPrefix: 'fe',\n  inline: false\n};\nvar _default = Icon;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Icon, \"Icon\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Icon.js\");\n  reactHotLoader.register(_default, \"default\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Icon.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nIcon.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Icon\",\n  \"props\": {\n    \"bsPrefix\": {\n      \"defaultValue\": {\n        \"value\": \"'fe'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"class prefix - this is an escape hatch\"\n    },\n    \"inline\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"inline icon will not render a span\"\n    },\n    \"href\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"href for the icon (will always render a span)\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"passed directly to the underlying element (<a> in case of href, <span> if not inline and <i> if inline)\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"icon type\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"a callback fired when the icon is clicked\"\n    }\n  }\n};",{"version":3,"sources":["E:\\ManagementPortal\\management-portal\\src\\components\\Icon.js"],"names":["React","Component","PropTypes","Icon","props","href","bsPrefix","className","type","onClick","other","pointerClass","inline","propTypes","string","isRequired","func","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,I;;;;;;;;;;;;;6BAoBO;AAAA,wBACwD,KAAKC,KAD7D;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,QADP,eACOA,QADP;AAAA,UACiBC,SADjB,eACiBA,SADjB;AAAA,UAC4BC,IAD5B,eAC4BA,IAD5B;AAAA,UACkCC,OADlC,eACkCA,OADlC;AAAA,UAC8CC,KAD9C;;AAGL,UAAIL,IAAI,IAAI,IAAZ,EACI,OACI;AAAG,QAAA,IAAI,EAAEA,IAAT;AAAe,QAAA,SAAS,EAAEE,SAA1B;AAAqC,QAAA,OAAO,EAAEE,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI;AAAG,QAAA,SAAS,YAAKJ,QAAL,cAAiBA,QAAjB,cAA6BE,IAA7B,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAQJ,UAAIG,YAAY,GAAGF,OAAO,IAAI,IAAX,GAAkB,SAAlB,GAA8B,EAAjD;AAEA,UAAIG,MAAJ,EACA,OACI;AAAG,QAAA,SAAS,YAAKN,QAAL,cAAiBA,QAAjB,cAA6BE,IAA7B,cAAqCD,SAArC,cAAkDI,YAAlD;AAAZ,SAAkFD,KAAlF;AAAyF,QAAA,OAAO,EAAED,OAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAIA,aACI;AAAM,QAAA,SAAS,iBAAUF,SAAV,cAAuBI,YAAvB;AAAf,SAA0DD,KAA1D;AAAiE,QAAA,OAAO,EAAED,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI;AAAG,QAAA,SAAS,YAAKH,QAAL,cAAiBA,QAAjB,cAA6BE,IAA7B,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;;;;;;;;EA5CcP,S;;AAAbE,I,CACKU,S,GAAY;AACf;AACAP,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UAFZ;;AAGf;AACAV,EAAAA,IAAI,EAAEH,SAAS,CAACY,MAJD;;AAKf;AACAP,EAAAA,SAAS,EAAEL,SAAS,CAACY,MANN;;AAOf;AACAN,EAAAA,IAAI,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UARR;;AASf;AACAN,EAAAA,OAAO,EAAEP,SAAS,CAACc,IAVJ;;AAWf;AACAJ,EAAAA,MAAM,EAAEV,SAAS,CAACe;AAZH,C;AADjBd,I,CAeKe,Y,GAAe;AAClBZ,EAAAA,QAAQ,EAAE,IADQ;AAElBM,EAAAA,MAAM,EAAE;AAFU,C;eAgCXT,I;AAAf;;;;;;;;;;0BA/CMA,I","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Icon extends Component {\r\n    static propTypes = {\r\n        /** class prefix - this is an escape hatch */\r\n        bsPrefix: PropTypes.string.isRequired,\r\n        /** href for the icon (will always render a span) */\r\n        href: PropTypes.string,\r\n        /** passed directly to the underlying element (<a> in case of href, <span> if not inline and <i> if inline) */\r\n        className: PropTypes.string,\r\n        /** icon type */\r\n        type: PropTypes.string.isRequired,\r\n        /** a callback fired when the icon is clicked */\r\n        onClick: PropTypes.func,\r\n        /** inline icon will not render a span */\r\n        inline: PropTypes.bool\r\n    }\r\n    static defaultProps = {\r\n        bsPrefix: 'fe',\r\n        inline: false\r\n    }\r\n\r\n    render() {\r\n        let { href, bsPrefix, className, type, onClick, ...other } = this.props;\r\n\r\n        if (href != null)\r\n            return (\r\n                <a href={href} className={className} onClick={onClick}>\r\n                    <span className=\"icon\" {...other}>\r\n                        <i className={`${bsPrefix} ${bsPrefix}-${type}`}></i>\r\n                    </span>\r\n                </a>\r\n            );\r\n\r\n        let pointerClass = onClick != null ? 'pointer' : '';\r\n\r\n        if (inline)\r\n        return (\r\n            <i className={`${bsPrefix} ${bsPrefix}-${type} ${className} ${pointerClass}`} {...other} onClick={onClick}></i>\r\n        );\r\n\r\n        return (\r\n            <span className={`icon ${className} ${pointerClass}`} {...other} onClick={onClick}>\r\n                <i className={`${bsPrefix} ${bsPrefix}-${type}`}></i>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Icon;"]}]}