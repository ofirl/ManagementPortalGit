{"remainingRequest":"E:\\ManagementPortal\\management-portal\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"E:\\\\ManagementPortal\\\\management-portal\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"E:\\\\ManagementPortal\\\\management-portal\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"E:\\\\ManagementPortal\\\\management-portal\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!E:\\ManagementPortal\\management-portal\\src\\components\\Dropdown.js","dependencies":[{"path":"E:\\ManagementPortal\\management-portal\\src\\components\\Dropdown.js","mtime":1550317745925},{"path":"E:\\ManagementPortal\\management-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ManagementPortal\\management-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Dropdown.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Dropdown.css';\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdown, _Component);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleShow = _this.toggleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      show: props.show\n    };\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.toggleShow();\n      this.onLabelClick && this.onLabelClick();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.show == null) return;\n      this.setState({\n        show: !this.state.show\n      });\n    }\n  }, {\n    key: \"toggleShow\",\n    value: function toggleShow(showValue) {\n      if (showValue == null) showValue = !this.state.show;\n      this.setState({\n        show: showValue\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.children);\n      var labelChild = this.props.children.find(function (c) {\n        return c.props.dropdownrole == 'label';\n      });\n      if (labelChild == null) labelChild = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" dropdown label \");\n      labelChild = React.cloneElement(labelChild);\n      var label = React.createElement(\"a\", {\n        id: this.props.name,\n        href: \"#!\",\n        className: \"dropdown-toggle\",\n        role: \"button\",\n        \"data-toggle\": \"dropdown\",\n        onClick: this.handleClick,\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": this.state.show,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, labelChild);\n      var menuItems = this.props.children.filter(function (c) {\n        return c.props.dropdownrole != 'label';\n      });\n      var menuItemElements = menuItems.map(function (i, idx) {\n        if (i.props.dropdownrole == 'divider') return React.createElement(\"hr\", {\n          key: idx,\n          className: \"dropdown-divider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n        return React.createElement(\"div\", {\n          key: idx,\n          className: \"dropdown-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, i);\n      });\n      var menu = null;\n      if (this.state.show) menu = React.createElement(\"div\", {\n        className: \"dropdown-menu show\",\n        \"aria-labelledby\": this.props.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, menuItemElements);\n      return React.createElement(\"div\", {\n        className: \"dropup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, label, menu);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Dropdown;\n}(Component);\n\nDropdown.propTypes = {\n  /** used for ID's */\n  name: PropTypes.string.isRequired,\n\n  /** show the dropdown */\n  show: PropTypes.bool.isRequired,\n\n  /** hook */\n  onLabelClick: PropTypes.func\n};\nDropdown.defaultProps = {};\nvar _default = Dropdown;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Dropdown, \"Dropdown\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Dropdown.js\");\n  reactHotLoader.register(_default, \"default\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Dropdown.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nDropdown.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"handleClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"toggleShow\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"showValue\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Dropdown\",\n  \"props\": {\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"used for ID's\"\n    },\n    \"show\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"show the dropdown\"\n    },\n    \"onLabelClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"hook\"\n    }\n  }\n};",{"version":3,"sources":["E:\\ManagementPortal\\management-portal\\src\\components\\Dropdown.js"],"names":["React","Component","PropTypes","Dropdown","props","handleClick","bind","toggleShow","state","show","onLabelClick","nextProps","setState","showValue","labelChild","children","find","c","dropdownrole","cloneElement","label","name","menuItems","filter","menuItemElements","map","i","idx","menu","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Dropdown.css';\r\n\r\nclass Dropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.toggleShow = this.toggleShow.bind(this);\r\n\r\n        this.state = {\r\n            show: props.show\r\n        }\r\n    }\r\n    static propTypes = {\r\n        /** used for ID's */\r\n        name: PropTypes.string.isRequired,\r\n        /** show the dropdown */\r\n        show: PropTypes.bool.isRequired,\r\n        /** hook */\r\n        onLabelClick: PropTypes.func\r\n    }\r\n    static defaultProps = {\r\n\r\n    }\r\n\r\n    handleClick() {\r\n        this.toggleShow();\r\n\r\n        this.onLabelClick && this.onLabelClick()\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.show == null)\r\n            return;\r\n\r\n        this.setState({ show: !this.state.show })\r\n    }\r\n    toggleShow(showValue) {\r\n        if (showValue == null)\r\n            showValue = !this.state.show;\r\n\r\n        this.setState({ show: showValue })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.children);\r\n        let labelChild = this.props.children.find((c) => c.props.dropdownrole == 'label')\r\n        if (labelChild == null)\r\n            labelChild = (<div> dropdown label </div>);\r\n\r\n        labelChild = React.cloneElement(labelChild);\r\n\r\n        let label = (\r\n            <a id={this.props.name} href=\"#!\" className=\"dropdown-toggle\" role=\"button\" data-toggle=\"dropdown\" onClick={this.handleClick} aria-haspopup=\"true\" aria-expanded={this.state.show}>\r\n                {labelChild}\r\n            </a>\r\n        );\r\n\r\n        let menuItems = this.props.children.filter((c) => c.props.dropdownrole != 'label')\r\n\r\n        let menuItemElements = menuItems.map((i, idx) => {\r\n            if (i.props.dropdownrole == 'divider')\r\n                return (<hr key={idx} className=\"dropdown-divider\" />);\r\n\r\n            return (\r\n                <div key={idx} className=\"dropdown-item\">\r\n                    {i}\r\n                </div>\r\n            )\r\n        }\r\n        );\r\n\r\n        let menu = null;\r\n        if (this.state.show)\r\n            menu = (\r\n                <div className=\"dropdown-menu show\" aria-labelledby={this.props.name}>\r\n                    {menuItemElements}\r\n                </div>\r\n            );\r\n\r\n        return (\r\n            <div className=\"dropup\">\r\n                {label}\r\n                {menu}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropdown;"]}]}