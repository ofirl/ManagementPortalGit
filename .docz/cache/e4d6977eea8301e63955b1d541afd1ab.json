{"remainingRequest":"E:\\ManagementPortal\\management-portal\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"E:\\\\ManagementPortal\\\\management-portal\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"E:\\\\ManagementPortal\\\\management-portal\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"E:\\\\ManagementPortal\\\\management-portal\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!E:\\ManagementPortal\\management-portal\\src\\components\\Table.js","dependencies":[{"path":"E:\\ManagementPortal\\management-portal\\src\\components\\Table.js","mtime":1551428427865},{"path":"E:\\ManagementPortal\\management-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ManagementPortal\\management-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Table.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Table.css';\nimport Card from 'react-bootstrap/Card';\nimport Input from './Input';\n\nfunction naturalSort(a, b) {\n  function chunkify(t) {\n    var tz = [],\n        x = 0,\n        y = -1,\n        n = 0,\n        i,\n        j;\n\n    while (t[x] != null && (i = (j = t[x++]).charCodeAt(0))) {\n      var m = i == 46 || i >= 48 && i <= 57;\n\n      if (m !== n) {\n        tz[++y] = \"\";\n        n = m;\n      }\n\n      tz[y] += j;\n    }\n\n    return tz;\n  }\n\n  var aa = chunkify(a);\n  var bb = chunkify(b);\n\n  for (var x = 0; aa[x] && bb[x]; x++) {\n    if (aa[x] !== bb[x]) {\n      var c = Number(aa[x]),\n          d = Number(bb[x]);\n\n      if (c == aa[x] && d == bb[x]) {\n        return c - d;\n      } else return aa[x] > bb[x] ? 1 : -1;\n    }\n  }\n\n  return aa.length - bb.length;\n}\n\nvar tablePropTypes = {\n  /** inner cell element */\n  // innerCellAs: PropTypes.any,\n\n  /** talbe is editable */\n  editable: PropTypes.bool,\n\n  /** class for the table */\n  className: PropTypes.string,\n\n  /** table columns */\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    accessor: PropTypes.string.isRequired,\n    sortable: PropTypes.bool,\n\n    /** readonly column */\n    readonly: PropTypes.bool\n  })).isRequired,\n\n  /** table items */\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n  /** table size control */\n  size: PropTypes.oneOf(['sm']),\n\n  /** nowrap control */\n  nowrap: PropTypes.bool,\n\n  /** table filter */\n  filter: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    column: PropTypes.string,\n    value: PropTypes.string\n  })])),\n\n  /** table sort control */\n  sort: PropTypes.shape({\n    column: PropTypes.string,\n    order: PropTypes.oneOf(['asc', 'des'])\n  })\n};\nvar tableDefaultProps = {\n  items: [],\n  nowrap: false\n};\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table, _Component);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.setFilter = _this.setFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addFilter = _this.addFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.applySort = _this.applySort.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sortItems = _this.sortItems.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.applyFilter = _this.applyFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.filterItems = _this.filterItems.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateItem = _this.updateItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      items: props.items,\n      filter: null,\n      sort: null\n    };\n    console.log(props);\n    console.log(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.instance = _assertThisInitialized(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var filter = nextProps.filter,\n          sort = nextProps.sort;\n      var nextState = {};\n      if (filter) nextState.filter = filter;\n      if (sort) nextState.sort = sort;\n      this.setState(nextState);\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filter) {\n      this.setState({\n        filter: filter\n      });\n    }\n  }, {\n    key: \"addFilter\",\n    value: function addFilter(filter) {\n      this.setState({\n        filter: _objectSpread({}, this.state.filter, filter)\n      });\n    }\n  }, {\n    key: \"applySort\",\n    value: function applySort(column, order) {\n      if (order == undefined && order == null) {\n        if (this.state.sort != null && this.state.sort.column == column) order = this.state.sort.order == 'asc' ? 'des' : 'asc';else order = 'asc';\n      }\n\n      var sortObj = {\n        column: column,\n        order: order\n      }; // let sortedItems = this.sortItems(sortObj);\n\n      this.setState({\n        sort: sortObj // items: sortedItems\n\n      });\n    }\n  }, {\n    key: \"sortItems\",\n    value: function sortItems(items, sortObj) {\n      if (items == null) items = this.state.items;\n\n      if (sortObj == null) {\n        if (this.state.sort == null) return items;else sortObj = this.state.sort;\n      } // sortObj = this.state.sort;\n      // if (sortObj == null)\n      //     return this.state.items;\n\n\n      console.log(sortObj);\n      var _sortObj = sortObj,\n          column = _sortObj.column,\n          order = _sortObj.order;\n      var sortedItems = items.sort(function (a, b) {\n        console.log(\"sorting \".concat(a[column], \" and \").concat(b[column]));\n        return naturalSort(a[column], b[column]);\n      });\n      if (order == 'des') sortedItems.reverse();\n      return sortedItems; // this.setState({\n      //     items: sortedItems\n      // });\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter(filter) {\n      this.setState({\n        filter: filter\n      });\n    }\n  }, {\n    key: \"filterItems\",\n    value: function filterItems(items, filterObj) {\n      if (items == null) items = this.state.items;\n\n      if (filterObj == null) {\n        if (this.state.filter == null) return items;else filterObj = this.state.filter;\n      }\n\n      if (filterObj.length == 0) return items;\n      if (filterObj[0] == null) filterObj = [filterObj];\n      var filteredItems = items;\n      filterObj.forEach(function (filter) {\n        if (filter.value != null) {\n          if (filter.column) filteredItems = filteredItems.filter(function (i) {\n            return i[filter.column] == filter.value;\n          });else filteredItems = filteredItems.filter(function (i) {\n            return Object.keys(i).some(function (key, idx) {\n              return key != 'id' && i[key].toString().match(new RegExp(filter.value));\n            });\n          });\n        } else filteredItems = filteredItems.filter(filter);\n      });\n      return filteredItems;\n    }\n  }, {\n    key: \"updateItem\",\n    value: function updateItem(itemId, column, newValue) {\n      var itemIdx = this.state.items.findIndex(function (i) {\n        return i.id == itemId;\n      });\n\n      if (itemIdx == -1) {\n        console.log('Item ID could not be found, exiting...');\n        return;\n      }\n\n      var updatedItems = this.state.items;\n      updatedItems[itemIdx][column] = newValue;\n      this.setState({\n        items: updatedItems\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var that = this;\n      var _this$props = this.props,\n          className = _this$props.className,\n          columns = _this$props.columns,\n          size = _this$props.size,\n          nowrap = _this$props.nowrap,\n          editable = _this$props.editable;\n      var items = this.state.items;\n      items = this.filterItems(items);\n      items = this.sortItems(items);\n      console.log(items);\n      return React.createElement(\"table\", {\n        className: \"table \".concat(size ? 'table-' + size : '', \" \").concat(nowrap ? 'table-nowrap' : '', \" card-table \").concat(className),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, columns.reduce(function (acc, current, idx) {\n        var sortable = {\n          'data-sort': true,\n          onClick: function onClick() {\n            return that.applySort(current.accessor);\n          }\n        };\n\n        if (_typeof(current) == 'object') {\n          if (current.sortable == false) sortable = null;\n        }\n\n        acc.push(React.createElement(\"th\", Object.assign({\n          key: idx,\n          className: \"text-muted \".concat(sortable ? 'pointer' : '')\n        }, sortable, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }), \" \", current.name, \" \"));\n        return acc;\n      }, []))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, items.reduce(function (acc, currentItem, rowIdx, array) {\n        acc.push(React.createElement(\"tr\", {\n          key: rowIdx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, columns.reduce(function (acc, current, colIdx, array) {\n          acc.push(React.createElement(\"td\", {\n            key: colIdx,\n            className: \"align-middle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          }, editable && current.readonly != true ? React.createElement(Input, {\n            value: currentItem[current.accessor],\n            flush: true,\n            onInput: function onInput(val) {\n              return that.updateItem(currentItem.id, current.accessor, val);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }) : currentItem[current.accessor]));\n          return acc;\n        }, [])));\n        return acc;\n      }, [])));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nTable.propTypes = tablePropTypes;\nTable.defaultProps = tableDefaultProps;\n\nvar TableCard =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(TableCard, _Component2);\n\n  function TableCard(props) {\n    var _this2;\n\n    _classCallCheck(this, TableCard);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(TableCard).call(this, props));\n    _this2.applyOmniFilter = _this2.applyOmniFilter.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.state = {\n      omniFilter: null\n    };\n    return _this2;\n  }\n\n  _createClass(TableCard, [{\n    key: \"applyOmniFilter\",\n    value: function applyOmniFilter(value) {\n      if (value == '') this.setState({\n        omniFilter: null\n      });else this.setState({\n        omniFilter: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          columns = _this$props2.columns,\n          items = _this$props2.items,\n          size = _this$props2.size,\n          nowrap = _this$props2.nowrap,\n          filter = _this$props2.filter,\n          sort = _this$props2.sort,\n          editable = _this$props2.editable,\n          title = _this$props2.title,\n          searchable = _this$props2.searchable,\n          children = _this$props2.children;\n      var tableFilter = [];\n      if (this.state.omniFilter != null) tableFilter.push({\n        value: this.state.omniFilter\n      }); // if (children.length == null)\n      //     children = [children];\n      // let headerButtons = children.find((c) => c.type.name == \"HeaderButtons\");\n      // let rowButtons = children.find((c) => c.type.name == \"RowButtons\");\n\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        className: \"pb-1 pl-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col align-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, title), searchable ? React.createElement(\"div\", {\n        className: \"col-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"col-auto\",\n        icon: \"search\",\n        placeholder: \"Search\",\n        onInput: this.applyOmniFilter,\n        prepend: true,\n        flush: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      })) : null))), React.createElement(Table, {\n        nowrap: nowrap,\n        columns: columns,\n        items: items,\n        filter: tableFilter,\n        editable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return TableCard;\n}(Component);\n\nTableCard.HeaderButtons =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(HeaderButtons, _Component3);\n\n  function HeaderButtons() {\n    _classCallCheck(this, HeaderButtons);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HeaderButtons).apply(this, arguments));\n  }\n\n  _createClass(HeaderButtons, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          relatedTable = _this$props3.relatedTable;\n      if (children.length == null) children = [children]; // children.map( (c) => React.cloneElement(c, {\n      //     table: relatedTable\n      // }));\n\n      return children;\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return HeaderButtons;\n}(Component);\n\nTableCard.RowButtons =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(RowButtons, _Component4);\n\n  function RowButtons() {\n    _classCallCheck(this, RowButtons);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RowButtons).apply(this, arguments));\n  }\n\n  _createClass(RowButtons, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return RowButtons;\n}(Component);\n\nTableCard.propTypes = _objectSpread({}, tablePropTypes, {\n  /** searchanble modifier */\n  searchable: PropTypes.bool,\n\n  /** table title */\n  title: PropTypes.string\n});\nTableCard.defaultProps = _objectSpread({}, tableDefaultProps, {\n  searchable: false\n});\nvar _default = Table;\nexport default _default;\nexport { TableCard };\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(naturalSort, \"naturalSort\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Table.js\");\n  reactHotLoader.register(tablePropTypes, \"tablePropTypes\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Table.js\");\n  reactHotLoader.register(tableDefaultProps, \"tableDefaultProps\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Table.js\");\n  reactHotLoader.register(Table, \"Table\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Table.js\");\n  reactHotLoader.register(TableCard, \"TableCard\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Table.js\");\n  reactHotLoader.register(_default, \"default\", \"E:\\\\ManagementPortal\\\\management-portal\\\\src\\\\components\\\\Table.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"setFilter\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"filter\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"addFilter\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"filter\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"applySort\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"column\",\n      \"type\": null\n    }, {\n      \"name\": \"order\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"sortItems\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"items\",\n      \"type\": null\n    }, {\n      \"name\": \"sortObj\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"applyFilter\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"filter\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"filterItems\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"items\",\n      \"type\": null\n    }, {\n      \"name\": \"filterObj\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"updateItem\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"itemId\",\n      \"type\": null\n    }, {\n      \"name\": \"column\",\n      \"type\": null\n    }, {\n      \"name\": \"newValue\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Table\",\n  \"props\": {\n    \"items\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"object\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"table items\"\n    },\n    \"nowrap\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"nowrap control\"\n    },\n    \"editable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"talbe is editable\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"class for the table\"\n    },\n    \"columns\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"name\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"accessor\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"sortable\": {\n              \"name\": \"bool\",\n              \"required\": false\n            },\n            \"readonly\": {\n              \"name\": \"bool\",\n              \"description\": \"readonly column\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"table columns\"\n    },\n    \"size\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'sm'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"table size control\"\n    },\n    \"filter\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"union\",\n          \"value\": [{\n            \"name\": \"func\"\n          }, {\n            \"name\": \"shape\",\n            \"value\": {\n              \"column\": {\n                \"name\": \"string\",\n                \"required\": false\n              },\n              \"value\": {\n                \"name\": \"string\",\n                \"required\": false\n              }\n            }\n          }]\n        }\n      },\n      \"required\": false,\n      \"description\": \"table filter\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"column\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"order\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"'asc'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'des'\",\n              \"computed\": false\n            }],\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"table sort control\"\n    }\n  }\n};\nTableCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"applyOmniFilter\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"value\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"TableCard\",\n  \"props\": {\n    \"searchable\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"searchanble modifier\"\n    },\n    \"editable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"talbe is editable\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"class for the table\"\n    },\n    \"columns\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"name\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"accessor\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"sortable\": {\n              \"name\": \"bool\",\n              \"required\": false\n            },\n            \"readonly\": {\n              \"name\": \"bool\",\n              \"description\": \"readonly column\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"table columns\"\n    },\n    \"items\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"object\"\n        }\n      },\n      \"required\": true,\n      \"description\": \"table items\"\n    },\n    \"size\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'sm'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"table size control\"\n    },\n    \"nowrap\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"nowrap control\"\n    },\n    \"filter\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"union\",\n          \"value\": [{\n            \"name\": \"func\"\n          }, {\n            \"name\": \"shape\",\n            \"value\": {\n              \"column\": {\n                \"name\": \"string\",\n                \"required\": false\n              },\n              \"value\": {\n                \"name\": \"string\",\n                \"required\": false\n              }\n            }\n          }]\n        }\n      },\n      \"required\": false,\n      \"description\": \"table filter\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"column\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"order\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"'asc'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'des'\",\n              \"computed\": false\n            }],\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"table sort control\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"table title\"\n    }\n  }\n};",{"version":3,"sources":["E:\\ManagementPortal\\management-portal\\src\\components\\Table.js"],"names":["React","Component","PropTypes","Card","Input","naturalSort","a","b","chunkify","t","tz","x","y","n","i","j","charCodeAt","m","aa","bb","c","Number","d","length","tablePropTypes","editable","bool","className","string","columns","arrayOf","shape","name","isRequired","accessor","sortable","readonly","items","object","size","oneOf","nowrap","filter","oneOfType","func","column","value","sort","order","tableDefaultProps","Table","props","setFilter","bind","addFilter","applySort","sortItems","applyFilter","filterItems","updateItem","state","console","log","instance","nextProps","nextContext","nextState","setState","undefined","sortObj","sortedItems","reverse","filterObj","filteredItems","forEach","Object","keys","some","key","idx","toString","match","RegExp","itemId","newValue","itemIdx","findIndex","id","updatedItems","that","reduce","acc","current","onClick","push","currentItem","rowIdx","array","colIdx","val","propTypes","defaultProps","TableCard","applyOmniFilter","omniFilter","title","searchable","children","tableFilter","alignItems","HeaderButtons","relatedTable","RowButtons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Table.css';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Input from './Input';\r\n\r\nfunction naturalSort(a, b) {\r\n    function chunkify(t) {\r\n        let tz = [], x = 0, y = -1, n = 0, i, j;\r\n\r\n        while (t[x] != null && (i = (j = t[x++]).charCodeAt(0))) {\r\n            let m = (i == 46 || (i >= 48 && i <= 57));\r\n            if (m !== n) {\r\n                tz[++y] = \"\";\r\n                n = m;\r\n            }\r\n            tz[y] += j;\r\n        }\r\n        return tz;\r\n    }\r\n\r\n    let aa = chunkify(a);\r\n    let bb = chunkify(b);\r\n\r\n    for (let x = 0; aa[x] && bb[x]; x++) {\r\n        if (aa[x] !== bb[x]) {\r\n            let c = Number(aa[x]), d = Number(bb[x]);\r\n            if (c == aa[x] && d == bb[x]) {\r\n                return c - d;\r\n            } else return (aa[x] > bb[x]) ? 1 : -1;\r\n        }\r\n    }\r\n    return aa.length - bb.length;\r\n}\r\n\r\nlet tablePropTypes = {\r\n    /** inner cell element */\r\n    // innerCellAs: PropTypes.any,\r\n    /** talbe is editable */\r\n    editable: PropTypes.bool,\r\n    /** class for the table */\r\n    className: PropTypes.string,\r\n    /** table columns */\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        accessor: PropTypes.string.isRequired,\r\n        sortable: PropTypes.bool,\r\n        /** readonly column */\r\n        readonly: PropTypes.bool\r\n    })).isRequired,\r\n    /** table items */\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    /** table size control */\r\n    size: PropTypes.oneOf(['sm']),\r\n    /** nowrap control */\r\n    nowrap: PropTypes.bool,\r\n    /** table filter */\r\n    filter: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([\r\n            PropTypes.func,\r\n            PropTypes.shape({\r\n                column: PropTypes.string,\r\n                value: PropTypes.string\r\n            })\r\n        ])),\r\n    /** table sort control */\r\n    sort: PropTypes.shape({\r\n        column: PropTypes.string,\r\n        order: PropTypes.oneOf(['asc', 'des'])\r\n    })\r\n}\r\n\r\nlet tableDefaultProps = {\r\n    items: [],\r\n    nowrap: false\r\n}\r\n\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setFilter = this.setFilter.bind(this);\r\n        this.addFilter = this.addFilter.bind(this);\r\n        this.applySort = this.applySort.bind(this);\r\n        this.sortItems = this.sortItems.bind(this);\r\n        this.applyFilter = this.applyFilter.bind(this);\r\n        this.filterItems = this.filterItems.bind(this);\r\n        this.updateItem = this.updateItem.bind(this);\r\n\r\n        this.state = {\r\n            items: props.items,\r\n            filter: null,\r\n            sort: null\r\n        }\r\n\r\n        console.log(props);\r\n        console.log(this);\r\n\r\n        this.instance = this;\r\n    }\r\n    static propTypes = tablePropTypes\r\n    static defaultProps = tableDefaultProps\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        let { filter, sort } = nextProps;\r\n        let nextState = {};\r\n        if (filter)\r\n            nextState.filter = filter;\r\n        if (sort)\r\n            nextState.sort = sort;\r\n\r\n        this.setState(nextState);\r\n    }\r\n    setFilter(filter) {\r\n        this.setState({ filter: filter });\r\n    }\r\n    addFilter(filter) {\r\n        this.setState({ filter: { ...this.state.filter, ...filter } });\r\n    }\r\n    applySort(column, order) {\r\n        if (order == undefined && order == null) {\r\n            if (this.state.sort != null && this.state.sort.column == column)\r\n                order = this.state.sort.order == 'asc' ? 'des' : 'asc';\r\n            else\r\n                order = 'asc';\r\n        }\r\n\r\n        let sortObj = {\r\n            column: column,\r\n            order: order\r\n        };\r\n\r\n        // let sortedItems = this.sortItems(sortObj);\r\n\r\n        this.setState({\r\n            sort: sortObj\r\n            // items: sortedItems\r\n        });\r\n    }\r\n    sortItems(items, sortObj) {\r\n        if (items == null)\r\n            items = this.state.items;\r\n\r\n        if (sortObj == null) {\r\n            if (this.state.sort == null)\r\n                return items;\r\n            else\r\n                sortObj = this.state.sort;\r\n        }\r\n        // sortObj = this.state.sort;\r\n        // if (sortObj == null)\r\n        //     return this.state.items;\r\n\r\n        console.log(sortObj);\r\n\r\n        let { column, order } = sortObj;\r\n        let sortedItems = items.sort((a, b) => {\r\n            console.log(`sorting ${a[column]} and ${b[column]}`);\r\n            return naturalSort(a[column], b[column]);\r\n        });\r\n\r\n        if (order == 'des')\r\n            sortedItems.reverse();\r\n\r\n        return sortedItems;\r\n\r\n        // this.setState({\r\n        //     items: sortedItems\r\n        // });\r\n    }\r\n    applyFilter(filter) {\r\n        this.setState({ filter: filter });\r\n    }\r\n    filterItems(items, filterObj) {\r\n        if (items == null)\r\n            items = this.state.items;\r\n\r\n        if (filterObj == null) {\r\n            if (this.state.filter == null)\r\n                return items;\r\n            else\r\n                filterObj = this.state.filter;\r\n        }\r\n\r\n        if (filterObj.length == 0)\r\n            return items;\r\n\r\n        if (filterObj[0] == null)\r\n            filterObj = [filterObj];\r\n\r\n        let filteredItems = items;\r\n        filterObj.forEach(filter => {\r\n            if (filter.value != null) {\r\n                if (filter.column)\r\n                    filteredItems = filteredItems.filter((i) => i[filter.column] == filter.value);\r\n                else\r\n                    filteredItems = filteredItems.filter((i) => Object.keys(i).some((key, idx) => key != 'id' && i[key].toString().match(new RegExp(filter.value))));\r\n            }\r\n            else\r\n                filteredItems = filteredItems.filter(filter);\r\n        });\r\n\r\n        return filteredItems;\r\n    }\r\n    updateItem(itemId, column, newValue) {\r\n        let itemIdx = this.state.items.findIndex((i) => i.id == itemId);\r\n        if (itemIdx == -1) {\r\n            console.log('Item ID could not be found, exiting...');\r\n            return;\r\n        }\r\n\r\n        let updatedItems = this.state.items;\r\n        updatedItems[itemIdx][column] = newValue;\r\n\r\n        this.setState({ items: updatedItems });\r\n    }\r\n\r\n    render() {\r\n        let that = this;\r\n\r\n        let { className, columns, size, nowrap, editable } = this.props;\r\n        let { items } = this.state;\r\n        items = this.filterItems(items);\r\n        items = this.sortItems(items);\r\n\r\n        console.log(items);\r\n\r\n        return (\r\n            <table className={`table ${size ? 'table-' + size : ''} ${nowrap ? 'table-nowrap' : ''} card-table ${className}`}>\r\n                <thead>\r\n                    <tr>\r\n                        {\r\n                            columns.reduce(function (acc, current, idx) {\r\n                                let sortable = {\r\n                                    'data-sort': true,\r\n                                    onClick: () => that.applySort(current.accessor)\r\n                                };\r\n                                if (typeof current == 'object') {\r\n                                    if (current.sortable == false)\r\n                                        sortable = null;\r\n                                }\r\n\r\n                                acc.push((<th key={idx} className={`text-muted ${sortable ? 'pointer' : ''}`} {...sortable}> {current.name} </th>));\r\n                                return acc;\r\n                            }, [])\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        items.reduce(function (acc, currentItem, rowIdx, array) {\r\n                            acc.push((\r\n                                <tr key={rowIdx}>\r\n                                    {\r\n                                        columns.reduce(function (acc, current, colIdx, array) {\r\n                                            acc.push(\r\n                                                (\r\n                                                    <td key={colIdx} className=\"align-middle\">\r\n                                                        {\r\n                                                            editable && current.readonly != true ?\r\n                                                                (\r\n                                                                    <Input value={currentItem[current.accessor]} flush onInput={(val) => that.updateItem(currentItem.id, current.accessor, val)} />\r\n                                                                )\r\n                                                                :\r\n                                                                currentItem[current.accessor]\r\n                                                        }\r\n                                                    </td>\r\n                                                )\r\n                                            );\r\n                                            return acc;\r\n                                        }, [])\r\n                                    }\r\n                                </tr>\r\n                            ));\r\n                            return acc;\r\n                        }, [])\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nclass TableCard extends Component {\r\n    static HeaderButtons = class HeaderButtons extends Component {\r\n        render() {\r\n            let { children, relatedTable } = this.props;\r\n\r\n            if (children.length == null)\r\n                children = [children];\r\n\r\n            // children.map( (c) => React.cloneElement(c, {\r\n            //     table: relatedTable\r\n            // }));\r\n            return children;\r\n        }\r\n    }\r\n    static RowButtons = class RowButtons extends Component {\r\n        render() {\r\n            return this.props.children;\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.applyOmniFilter = this.applyOmniFilter.bind(this);\r\n\r\n        this.state = {\r\n            omniFilter: null\r\n        }\r\n    }\r\n    static propTypes = {\r\n        ...tablePropTypes,\r\n        /** searchanble modifier */\r\n        searchable: PropTypes.bool,\r\n        /** table title */\r\n        title: PropTypes.string\r\n    }\r\n    static defaultProps = {\r\n        ...tableDefaultProps,\r\n        searchable: false\r\n    }\r\n\r\n    applyOmniFilter(value) {\r\n        if (value == '')\r\n            this.setState({ omniFilter: null });\r\n        else\r\n            this.setState({ omniFilter: value });\r\n    }\r\n\r\n    render() {\r\n        let { columns, items, size, nowrap, filter, sort, editable, title, searchable, children } = this.props;\r\n\r\n        let tableFilter = [];\r\n        if (this.state.omniFilter != null)\r\n            tableFilter.push({ value: this.state.omniFilter });\r\n\r\n        // if (children.length == null)\r\n        //     children = [children];\r\n\r\n        // let headerButtons = children.find((c) => c.type.name == \"HeaderButtons\");\r\n        // let rowButtons = children.find((c) => c.type.name == \"RowButtons\");\r\n\r\n        return (\r\n            <Card>\r\n                <Card.Header className=\"pb-1 pl-4\">\r\n                    <Card.Title className=\"mb-0\">\r\n                        <div className=\"row\" style={{ alignItems: 'center' }}>\r\n                            <div className=\"col align-middle\">\r\n                                {title}\r\n                            </div>\r\n                            {\r\n                                searchable ?\r\n                                    (\r\n                                        <div className=\"col-auto\">\r\n                                            <Input className=\"col-auto\" icon=\"search\" placeholder=\"Search\" onInput={this.applyOmniFilter} prepend flush />\r\n                                        </div>\r\n                                    )\r\n                                    : null\r\n                            }\r\n                            {\r\n                                // headerButtons != null ?\r\n                                //     React.cloneElement(headerButtons, { relatedTable: this})\r\n                                //     : null\r\n                            }\r\n                        </div>\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                    <Table nowrap={nowrap} columns={columns} items={items} filter={tableFilter} editable />\r\n                {/* {\r\n                    React.forwardRef( (props, ref) => (<Table nowrap={nowrap} columns={columns} items={items} filter={tableFilter} instance={ref} editable />)).render()\r\n                } */}\r\n                {/* <Table nowrap={nowrap} columns={columns} items={items} filter={tableFilter} instance={this.tableInstance} editable /> */}\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\nexport { TableCard };"]}]}